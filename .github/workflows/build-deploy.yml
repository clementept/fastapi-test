name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      TEST_DATABASE_NAME: ${{secrets.TEST_DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      JWT_ALGORYTHM: ${{secrets.JWT_ALGORYTHM}}
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.TEST_DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2

      - name: Install python v3.12.1
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.1"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install all dependencies
        run: pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pytest

    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v3
    #   - name: Build and push
    #     uses: docker/build-push-action@v5
    #     with:
    #       context: .
    #       file: ./Dockerfile
    #       push: true
    #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
    #       cache-from: type=local,src=/tmp/.buildx-cache
    #       cache-to: type=local,dest=/tmp/.buildx-cache
    #   - name: Image digest
    #     run: echo ${{steps.docker_build.outputs.digest}}
  
  deploy:
    runs-on: ubuntu-latest
    needs: 
        - build

    steps:
        - name: Deploying
          run: echo "Going to deploy"